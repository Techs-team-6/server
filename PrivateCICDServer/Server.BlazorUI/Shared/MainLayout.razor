@implements IErrorComponent
@using Server.BlazorUI.Tools
@inherits LayoutComponentBase


<PageTitle>Server.BlazorUI</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>
    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>
        <div class="content px-4">

            <ErrorBoundary @ref="_errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <Dialog Size="@DialogSize.Normal" Centered="true" IsShowing="true" Animation="@DialogAnimation.SlideDown">
                        <DialogHeader>
                            <h3>An error has occured</h3>
                        </DialogHeader>
                        <DialogBody>
                            <p>@ErrorParser.GetErrorMessage(context.Message)</p>
                        </DialogBody>
                        <DialogFooter>
                            <button type="button" class="btn btn-primary" @onclick="@(_ => _errorBoundary.Recover())">Reload</button>
                        </DialogFooter>
                    </Dialog>
                </ErrorContent>
            </ErrorBoundary>
            @* @if (_isErrorActive) *@
            @* { *@
            @*     <Dialog Size="@DialogSize.Normal" Centered="true" IsShowing="_isErrorActive" Animation="@DialogAnimation.SlideDown"> *@
            @*         <DialogHeader> *@
            @*             <h3>@_title</h3> *@
            @*         </DialogHeader> *@
            @*         <DialogBody> *@
            @*             <p>@_message</p> *@
            @*         </DialogBody> *@
            @*         <DialogFooter> *@
            @*             <button type="button" class="btn btn-primary" @onclick="@HideError">Ok</button> *@
            @*         </DialogFooter> *@
            @*     </Dialog> *@
            @* } *@
            @* <CascadingValue Value="this" Name="ErrorComponent">@Body</CascadingValue> *@
        </div>
    </main>
</div>

@code {
    private ErrorBoundary? _errorBoundary;

    bool _isErrorActive = false;
    string _title = "";
    string _message = "";

    public void ShowError(string title, string message)
    {
        this._isErrorActive = true;
        this._title = title;
        this._message = message;
        StateHasChanged();
    }

    public void ShowError(string message)
    {
        ShowError("An error has occured", message);
    }

    private void HideError()
    {
        _isErrorActive = false;
    }
}